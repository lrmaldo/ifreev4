#!/usr/bin/env php
<?php

/**
 * Script de verificaci√≥n de las mejoras implementadas para el problema de Select2 con Livewire
 * Verifica que todos los cambios est√©n en su lugar y funcionando correctamente
 */

echo "=== VERIFICACI√ìN DE MEJORAS - SISTEMA SELECT2 + LIVEWIRE ===\n\n";

// Ruta base del proyecto
$basePath = __DIR__;

// Archivos a verificar
$filesToCheck = [
    'app/Livewire/Admin/Campanas/Index.php' => [
        'description' => 'Componente Livewire principal',
        'checks' => [
            'M√©todo edit() mejorado' => 'array_map(\'intval\', $zonas_raw)',
            'Logging de zonas' => 'Log::debug(\'Zonas cargadas para edici√≥n\'',
            'Dispatch del evento' => 'dispatch(\'campanEditLoaded\'',
            'Normalizaci√≥n de arrays' => '$this->zonas_ids = array_map(\'intval\', $zonas_raw)',
        ]
    ],
    'public/js/select2-zonas.js' => [
        'description' => 'Script JavaScript mejorado',
        'checks' => [
            'Sistema de reintentos' => 'attemptUpdateWithRetry',
            'Manejo de timing' => 'MAX_RETRY_ATTEMPTS',
            'Logging mejorado' => 'console.log(\'Select2 Zonas:',
            'Verificaci√≥n post-actualizaci√≥n' => 'setTimeout(() => {',
            'Funci√≥n updateFromLivewire' => 'function updateFromLivewire',
        ]
    ],
    'resources/views/livewire/admin/campanas/index.blade.php' => [
        'description' => 'Vista Blade actualizada',
        'checks' => [
            'Secci√≥n de debugging' => 'Informaci√≥n de Debugging',
            'Logging del evento' => 'campanEditLoaded',
            'Herramientas de diagn√≥stico' => 'Estado Actual',
        ]
    ]
];

$testFiles = [
    'public/test-campana-edit-select2.html' => 'Archivo de prueba original',
    'public/test-integration.html' => 'Test de integraci√≥n completo',
];

echo "1. VERIFICACI√ìN DE ARCHIVOS PRINCIPALES\n";
echo str_repeat("-", 50) . "\n";

foreach ($filesToCheck as $file => $config) {
    $filePath = $basePath . '/' . $file;
    echo "Verificando: {$config['description']}\n";
    echo "Archivo: $file\n";

    if (!file_exists($filePath)) {
        echo "‚ùå ARCHIVO NO ENCONTRADO\n\n";
        continue;
    }

    $content = file_get_contents($filePath);
    $allChecksPass = true;

    foreach ($config['checks'] as $checkName => $searchText) {
        $found = strpos($content, $searchText) !== false;
        echo "  " . ($found ? "‚úÖ" : "‚ùå") . " $checkName\n";
        if (!$found) {
            $allChecksPass = false;
        }
    }

    echo "Estado: " . ($allChecksPass ? "‚úÖ TODAS LAS MEJORAS IMPLEMENTADAS" : "‚ö†Ô∏è FALTAN ALGUNAS MEJORAS") . "\n\n";
}

echo "2. VERIFICACI√ìN DE ARCHIVOS DE PRUEBA\n";
echo str_repeat("-", 50) . "\n";

foreach ($testFiles as $file => $description) {
    $filePath = $basePath . '/' . $file;
    echo "Verificando: $description\n";
    echo "Archivo: $file\n";

    if (file_exists($filePath)) {
        $size = filesize($filePath);
        echo "‚úÖ ARCHIVO ENCONTRADO (${size} bytes)\n\n";
    } else {
        echo "‚ùå ARCHIVO NO ENCONTRADO\n\n";
    }
}

echo "3. AN√ÅLISIS DETALLADO DE MEJORAS IMPLEMENTADAS\n";
echo str_repeat("-", 50) . "\n";

// Verificar m√©todo edit() espec√≠ficamente
$livewireFile = $basePath . '/app/Livewire/Admin/Campanas/Index.php';
if (file_exists($livewireFile)) {
    $content = file_get_contents($livewireFile);

    echo "M√âTODO EDIT() - AN√ÅLISIS DETALLADO:\n";

    // Buscar el m√©todo edit
    if (preg_match('/public function edit\(\$id\)(.*?)(?=public function|\z)/s', $content, $matches)) {
        $editMethod = $matches[1];

        $improvements = [
            'Carga de zonas con relaci√≥n' => preg_match('/with\([\'"]zonas[\'\"]\)/', $editMethod),
            'Normalizaci√≥n a enteros' => preg_match('/array_map\([\'"]intval[\'"]/', $editMethod),
            'Logging de debugging' => preg_match('/Log::debug/', $editMethod),
            'Dispatch del evento' => preg_match('/dispatch\([\'"]campanEditLoaded[\'"]/', $editMethod),
            'Par√°metros del evento' => preg_match('/zonasIds.*campanaTitulo/', $editMethod),
        ];

        foreach ($improvements as $improvement => $found) {
            echo "  " . ($found ? "‚úÖ" : "‚ùå") . " $improvement\n";
        }
    } else {
        echo "  ‚ùå No se pudo encontrar el m√©todo edit()\n";
    }
    echo "\n";
}

// Verificar JavaScript espec√≠ficamente
$jsFile = $basePath . '/public/js/select2-zonas.js';
if (file_exists($jsFile)) {
    $content = file_get_contents($jsFile);

    echo "SCRIPT JAVASCRIPT - AN√ÅLISIS DETALLADO:\n";

    $jsImprovements = [
        'Sistema de reintentos' => preg_match('/attemptUpdateWithRetry/', $content),
        'M√°ximo de reintentos definido' => preg_match('/MAX_RETRY_ATTEMPTS\s*=\s*\d+/', $content),
        'Delays incrementales' => preg_match('/delay.*attempt.*\*/', $content),
        'Verificaci√≥n post-actualizaci√≥n' => preg_match('/setTimeout.*verificationValues/', $content),
        'Logging extensivo' => preg_match('/console\.log.*Select2 Zonas:/', $content),
        'Manejo de eventos Livewire' => preg_match('/campanEditLoaded/', $content),
        'Funci√≥n updateFromLivewire' => preg_match('/function updateFromLivewire/', $content),
    ];

    foreach ($jsImprovements as $improvement => $found) {
        echo "  " . ($found ? "‚úÖ" : "‚ùå") . " $improvement\n";
    }
    echo "\n";
}

echo "4. RESUMEN DE ESTADO\n";
echo str_repeat("-", 50) . "\n";

// Contar mejoras implementadas
$totalChecks = 0;
$passedChecks = 0;

foreach ($filesToCheck as $file => $config) {
    $filePath = $basePath . '/' . $file;
    if (file_exists($filePath)) {
        $content = file_get_contents($filePath);
        foreach ($config['checks'] as $searchText) {
            $totalChecks++;
            if (strpos($content, $searchText) !== false) {
                $passedChecks++;
            }
        }
    }
}

$percentage = $totalChecks > 0 ? round(($passedChecks / $totalChecks) * 100, 1) : 0;

echo "Total de verificaciones: $totalChecks\n";
echo "Verificaciones exitosas: $passedChecks\n";
echo "Porcentaje completado: $percentage%\n\n";

if ($percentage >= 90) {
    echo "üéâ ESTADO: EXCELENTE - Todas las mejoras principales implementadas\n";
} elseif ($percentage >= 70) {
    echo "‚úÖ ESTADO: BUENO - La mayor√≠a de mejoras implementadas\n";
} elseif ($percentage >= 50) {
    echo "‚ö†Ô∏è ESTADO: REGULAR - Algunas mejoras pendientes\n";
} else {
    echo "‚ùå ESTADO: CR√çTICO - Muchas mejoras faltantes\n";
}

echo "\n5. PR√ìXIMOS PASOS RECOMENDADOS\n";
echo str_repeat("-", 50) . "\n";

if ($percentage >= 90) {
    echo "1. ‚úÖ Probar la funcionalidad en el navegador\n";
    echo "2. ‚úÖ Verificar logs del navegador y servidor\n";
    echo "3. ‚úÖ Confirmar que las zonas se guardan correctamente\n";
    echo "4. ‚úÖ Validar que Select2 se reinicializa entre modales\n";
} else {
    echo "1. ‚ö†Ô∏è Completar la implementaci√≥n de las mejoras faltantes\n";
    echo "2. ‚ö†Ô∏è Revisar los archivos marcados con ‚ùå\n";
    echo "3. ‚ö†Ô∏è Ejecutar este script nuevamente despu√©s de los cambios\n";
}

echo "\n=== VERIFICACI√ìN COMPLETADA ===\n";
